// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	payment "github.com/GroupProject3-Kelompok2/BE/features/payment"
	mock "github.com/stretchr/testify/mock"
)

// PaymentData is an autogenerated mock type for the PaymentData type
type PaymentData struct {
	mock.Mock
}

// Payment provides a mock function with given fields: request
func (_m *PaymentData) Payment(request payment.PaymentCore) (payment.PaymentCore, error) {
	ret := _m.Called(request)

	var r0 payment.PaymentCore
	var r1 error
	if rf, ok := ret.Get(0).(func(payment.PaymentCore) (payment.PaymentCore, error)); ok {
		return rf(request)
	}
	if rf, ok := ret.Get(0).(func(payment.PaymentCore) payment.PaymentCore); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Get(0).(payment.PaymentCore)
	}

	if rf, ok := ret.Get(1).(func(payment.PaymentCore) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPaymentData creates a new instance of PaymentData. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaymentData(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaymentData {
	mock := &PaymentData{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
